set nocompatible

call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

filetype plugin on
filetype indent on

set showcmd
set history=500
set laststatus=2 " always show status line
set gfn=Envy\ Code\ R\ Normal\ 11

set shiftwidth=4
set tabstop=4
set noexpandtab

set backspace=indent,eol,start

" Ack
set grepprg=ack
let g:ackprg="ack-grep -H --nocolor --nogroup --column"

syn on
set mouse=a
set cindent
set autoindent
set smartindent
set showmatch
set ignorecase
set smartcase
set incsearch
set hlsearch
set number
set backupdir=~/vim_backup
set directory=~/vim_backup





"zz centers the screen 
"on incsearch center the screen
nmap n nzz
nmap N Nzz
"navigation on wrapped lines
nmap k gk
nmap j gj


" menu hawtness - :b now opens buffer menu
set wildchar=<Tab> wildmenu wildmode=full

let mapleader = ","
" insert comment
map <Leader>c :TComment<CR>

map <Leader>b :b<Space>

" open NerdTree with ,n
map <Leader>n :NERDTreeToggle<CR>

map <Leader>t :TagbarToggle<CR>

imap <C-l> <Space>=><Space>

" Better movement around window splits
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l


set undolevels=1000		" use many muchos levels of undoness 
set title							"  change the terminal's title

colorscheme molokai

" regular copy and paste on insert mode and visual mode
imap <C-c> <Esc>"+y 
imap <C-v> <Esc>"+gP 



" Settings for ruby 
" map <leader>sr  :set syntax=ruby	 ai et ts=2 sw=2 tw=0<CR>
map <leader>sr :set noet ci pi sts=0 sw=2 ts=2<CR>


set listchars=tab:»·,trail:·

map <leader>sj	:set ai et ts=4 sw=4 tw=0<CR>

map <leader>sl	:colorscheme solarized<CR>:set background=light<CR>

" Convert spaces to tabs
map <leader>st :set noet|retab!<CR>

" Convert tabs to spaces
map <leader>ts :set et|retab<CR>

" ================
" Ruby stuff
" ================

augroup myfiletypes
  " Clear old autocmds in group
  autocmd!
  " autoindent with two spaces, always expand tabs
  autocmd FileType ruby,eruby,yaml set ai sw=2 sts=2 et
augroup END
" ================


set nolazyredraw 


let g:syntastic_enable_signs=1
let g:syntastic_auto_loc_list=1
let g:syntastic_disabled_filetypes = ['scss','eruby']

" Setup supertab to be a bit smarter about it's usage
let g:SuperTabLongestEnhanced = 1


" Sort CSS properties between the braces alphabetically
:command! SortCSS :g#\({\n\)\@<=#.,/}/sort | :noh

" Tell snipmate to pull it's snippets from a custom directory
let g:snippets_dir = $HOME.'/.vim/snippets/'

" Closes the window showing the location list from sytastic errors
map <silent><leader>lc :lcl<cr>

" File type utility settings
" -----------------------------------------------------------------------------
" Sort CSS selectors and allow for browser refresh
function! s:setCSS()
  call s:setBrowserEnv()
endfunction


" File handling and settings
" -----------------------------------------------------------------------------

if has("autocmd")
	"jquery syntax 
	au BufRead,BufNewFile jquery.*.js set ft=javascript syntax=jquery

	" Start where I left off
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
	\| exe "normal! g'\"" | endif


	" Reload .vimrc after it or vimrc.local been saved
	  au! BufWritePost .vimrc source %
	  au! BufWritePost .vimrc.local source ~/.vimrc

	" Reload all snippets when creating new ones.
	  au! BufWritePost *.snippets call ReloadAllSnippets()

endif

if $TERM == 'xterm-color' && &t_Co == 8
  set t_Co=16
endif
